// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

// src/schema.prisma

// Usuário da aplicação (para login)
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relação: Um usuário pode ter um perfil de cliente
  customerId String? @unique // Chave estrangeira para o Customer
  customer   Customer? @relation(fields: [customerId], references: [id])
}


model Customer {
  id       String   @id @default(uuid())
  name     String
  email    String   @unique
  cpf_cnpj String   @unique
  orders   Order[]
  
  // Relação: Um cliente pertence a um usuário
  user     User?
}

// Model para Produtos
model Product {
  id              String         @id @default(uuid())
  name            String
  price           Float
  stock           Int
  orderItems      OrderItem[]
}

// Model para Pedidos
model Order {
  id              String         @id @default(uuid())
  status          String         @default("PENDING_PAYMENT")
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  customerId      String
  customer        Customer       @relation(fields: [customerId], references: [id])
  orderItems      OrderItem[]
}

// Tabela de junção para os itens do pedido
// Representa a relação N para N entre Pedidos e Produtos
model OrderItem {
  id              String         @id @default(uuid())
  orderId         String
  productId       String
  quantity        Int
  
  order           Order          @relation(fields: [orderId], references: [id])
  product         Product        @relation(fields: [productId], references: [id])
  
  @@unique([orderId, productId])
}